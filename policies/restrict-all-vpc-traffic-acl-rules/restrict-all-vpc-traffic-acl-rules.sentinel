# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

import "tfplan/v2" as tfplan

allDefaultNetworkACLs = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.mode is "managed" and
		resource_changes.type is "aws_default_network_acl" and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

deny_undefined_ingress_configuration = rule {
	all allDefaultNetworkACLs as _, acls {
		keys(acls.change.after) contains "ingress"
	}
}

deny_all_vpc_inbound_acls = rule when deny_undefined_ingress_configuration is true {
	all allDefaultNetworkACLs as _, acls {
		acls.change.after.ingress is empty
	}
}

deny_undefined_egress_configuration = rule {
	all allDefaultNetworkACLs as _, acls {
		keys(acls.change.after) contains "egress"
	}
}

deny_all_vpc_outbound_acls = rule when deny_undefined_egress_configuration is true {
	all allDefaultNetworkACLs as _, acls {
		acls.change.after.egress is empty
	}
}

// Ensure the default security group of every VPC restricts all traffic
main = rule {
	deny_undefined_ingress_configuration and
	deny_undefined_egress_configuration and
	deny_all_vpc_inbound_acls and
	deny_all_vpc_outbound_acls
}
